app:
  config:
    input-topic: ${FROM_TOPIC:kaas.prod.ctc.icue.stg.mbr-key}

spring:
  application:
    name: transform-processor
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    client-id: ${APP_ID:icue-ctc-transform-processor-gsithur1}
    consumer:
      group-id: ${GROUP_ID:icue-ctc-transform-processor-gsithur1}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      max-poll-records: 2000
      auto-offset-reset: ${OFFSET_RESET:earliest}
      properties:
        max.poll.interval.ms: 9000000
        max.poll.records: 2000
        partition.assignment.strategy: org.apache.kafka.clients.consumer.RoundRobinAssignor
    producer:
      acks: all
      compression-type: snappy
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 500
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    properties:
      security:
        protocol: ${KAFKA_SSL_PROTOCOL:PLAINTEXT}
    ssl:
      key-password: ${KAFKA_KEYSTORE_PASSWORD:}
      key-store-location: ${KAFKA_KEYSTORE_LOCATION:file:src/main/resources/kafka/icue-prod/icue-prod.keystore.jks}
      key-store-password: ${KAFKA_KEYSTORE_PASSWORD:}
      trust-store-location: ${KAFKA_TRUSTSTORE_LOCATION:file:src/main/resources/kafka/icue-prod/kaas-truststore.jks}
      trust-store-password: ${KAFKA_TRUSTSTORE_PASSWORD:}
    listener:
      client-id: ${GROUP_ID:icue-ctc-transform-processor-gsithur1}
      poll-timeout.seconds: ${POLL_TIMEOUT:2}
      ack-mode: manual
      log-container-config: true
      type: batch
      concurrency: ${SPRING_KAFKA_CONCURRENCY:1}