server.port = 8080
spring.main.allow-bean-definition-overriding = true

spring.kafka.bootstrap-servers = ${spring.embedded.kafka.brokers}

spring.kafka.producer.properties.schema.registry.url= not-used
spring.kafka.producer.value-serializer = com.larbotech.kafka.mock.CustomKafkaAvroSerializer
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.group-id = showcase-producer-id

spring.kafka.consumer.properties.schema.registry.url= not-used
spring.kafka.consumer.value-deserializer = com.larbotech.kafka.mock.CustomKafkaAvroDeserializer
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id = showcase-consumer-id
spring.kafka.auto.offset.reset = earliest

spring.kafka.producer.auto.register.schemas= true
spring.kafka.properties.specific.avro.reader= true